;; Analyzed by ClojureScript 1.7.170
{:use-macros {defui om.next}, :excludes #{var? key replace}, :name om.next, :imports {Console goog.debug.Console}, :requires {glog goog.log, gstring goog.string, om.next.cache om.next.cache, clojure.zip clojure.zip, p om.next.protocols, om.next.impl.parser om.next.impl.parser, goog.string goog.string, gobj goog.object, goog.object goog.object, walk clojure.walk, goog.log goog.log, util om.util, om.next.protocols om.next.protocols, om.tempid om.tempid, c om.next.cache, parser om.next.impl.parser, transit om.transit, zip clojure.zip, clojure.walk clojure.walk, om.transit om.transit, tempid om.tempid, om.util om.util, Console goog.debug.Console}, :uses nil, :defs {get-props {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 326, :column 8, :end-line 326, :end-column 17, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, tag {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 238, :column 7, :end-line 238, :end-column 10, :arglists (quote ([x class]))}, :name om.next/tag, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 10, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class]))}, db->tree {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1080, :column 7, :end-line 1080, :end-column 15, :arglists (quote ([query data refs] [query data refs map-ident])), :doc "Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([query data refs] [query data refs map-ident]), :arglists ([query data refs] [query data refs map-ident]), :arglists-meta (nil nil)}}, :name om.next/db->tree, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([query data refs] [query data refs map-ident]), :arglists ([query data refs] [query data refs map-ident]), :arglists-meta (nil nil)}, :method-params ([query data refs] [query data refs map-ident]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1080, :end-line 1080, :max-fixed-arity 4, :fn-var true, :arglists ([query data refs] [query data refs map-ident]), :doc "Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values."}, get-local-query-data {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 192, :column 8, :end-line 192, :end-column 28, :private true, :arglists (quote ([component]))}, :private true, :name om.next/get-local-query-data, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 28, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, t {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 381, :column 8, :end-line 381, :end-column 9, :private true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, :private true, :name om.next/t, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 381, :end-line 381, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, get-next-props {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 323, :column 8, :end-line 323, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-next-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, unwrap {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 254, :column 8, :end-line 254, :end-column 14, :private true, :arglists (quote ([om-props]))}, :private true, :name om.next/unwrap, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([om-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 254, :end-line 254, :max-fixed-arity 1, :fn-var true, :arglists (quote ([om-props]))}, query {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 168, :column 4, :end-line 168, :end-column 9, :protocol om.next/IQuery, :doc "Return the component's unbound query", :arglists (quote ([this]))}, :protocol om.next/IQuery, :name om.next/query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 168, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the component's unbound query"}, query-template {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 69, :column 8, :end-line 69, :end-column 22, :private true, :arglists (quote ([query path]))}, :private true, :name om.next/query-template, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path]))}, move-to-key {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 59, :column 8, :end-line 59, :end-column 19, :private true, :arglists (quote ([loc k]))}, :private true, :name om.next/move-to-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([loc k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc k]))}, get-prop {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 306, :column 8, :end-line 306, :end-column 16, :private true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/get-prop, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([c k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 306, :end-line 306, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, ->OmProps {:protocol-inline nil, :meta {:private true, :protocols #{}, :file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :end-column 27, :column 20, :factory :positional, :line 244, :end-line 244, :arglists (quote ([props basis-t])), :skip-protocol-flag nil}, :private true, :protocols #{}, :name om.next/->OmProps, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([props basis-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 244, :end-line 244, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props basis-t])), :skip-protocol-flag nil}, default-merge {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1175, :column 7, :end-line 1175, :end-column 20, :arglists (quote ([reconciler state res]))}, :name om.next/default-merge, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([reconciler state res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1175, :end-line 1175, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reconciler state res]))}, class-path->query {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 934, :column 7, :end-line 934, :end-column 24, :arglists (quote ([x y]))}, :name om.next/class-path->query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 24, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 934, :end-line 934, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, ITxIntercept {:meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 713, :column 14, :end-line 713, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {tx-intercept [[c tx]]}}}, :protocol-symbol true, :name om.next/ITxIntercept, :file "resources/public/js/om/next.cljs", :end-column 26, :column 1, :line 713, :protocol-info {:methods {tx-intercept [[c tx]]}}, :info nil, :end-line 713, :impls #{}, :doc nil, :jsdoc ("@interface")}, Ident {:meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 152, :column 14, :end-line 152, :end-column 19, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {ident [[this props]]}}}, :protocol-symbol true, :name om.next/Ident, :file "resources/public/js/om/next.cljs", :end-column 19, :column 1, :line 152, :protocol-info {:methods {ident [[this props]]}}, :info nil, :end-line 152, :impls #{}, :doc nil, :jsdoc ("@interface")}, rewrite {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1118, :column 7, :end-line 1118, :end-column 14, :arglists (quote ([paths]))}, :name om.next/rewrite, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([paths]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1118, :end-line 1118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([paths]))}, get-rendered-state {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 525, :column 7, :end-line 525, :end-column 25, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, :name om.next/get-rendered-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 525, :end-line 525, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, join-value {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 104, :column 8, :end-line 104, :end-column 18, :private true, :arglists (quote ([join]))}, :private true, :name om.next/join-value, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([join]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([join]))}, react-type {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 406, :column 7, :end-line 406, :end-column 17, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, :name om.next/react-type, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 406, :end-line 406, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, merge! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1182, :column 7, :end-line 1182, :end-column 13, :arglists (quote ([reconciler delta])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, :name om.next/merge!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([reconciler delta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1182, :end-line 1182, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler delta])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, -next-props {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 360, :column 7, :end-line 360, :end-column 18, :arglists (quote ([next-props component]))}, :name om.next/-next-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([next-props component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 360, :end-line 360, :max-fixed-arity 2, :fn-var true, :arglists (quote ([next-props component]))}, gather-sends {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 553, :column 7, :end-line 553, :end-column 19, :arglists (quote ([{:keys [parser], :as env} q remotes]))}, :name om.next/gather-sends, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([p__18557 q remotes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 553, :end-line 553, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [parser], :as env} q remotes]))}, set-query! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 561, :column 7, :end-line 561, :end-column 17, :arglists (quote ([component {:keys [params query]}])), :doc "Change the query of a component. Takes a map containing :params and/or\n   :query. :params should be a map of new bindings and :query should be a query\n   expression. Will schedule a re-render as well as remote re-sends if\n   necessary."}, :name om.next/set-query!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component p__18566]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 561, :end-line 561, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component {:keys [params query]}])), :doc "Change the query of a component. Takes a map containing :params and/or\n   :query. :params should be a map of new bindings and :query should be a query\n   expression. Will schedule a re-render as well as remote re-sends if\n   necessary."}, ref->any {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 922, :column 7, :end-line 922, :end-column 15, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, :name om.next/ref->any, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 922, :end-line 922, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, get-component-query {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 206, :column 8, :end-line 206, :end-column 27, :private true, :arglists (quote ([c]))}, :private true, :name om.next/get-component-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, clear-prev-props! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 378, :column 8, :end-line 378, :end-column 25, :private true, :arglists (quote ([c]))}, :private true, :name om.next/clear-prev-props!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 378, :end-line 378, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, props {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 441, :column 7, :end-line 441, :end-column 12, :arglists (quote ([component])), :doc "Return a components props."}, :name om.next/props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 441, :end-line 441, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return a components props."}, -prev-props {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 352, :column 7, :end-line 352, :end-column 18, :arglists (quote ([prev-props component]))}, :name om.next/-prev-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([prev-props component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 352, :end-line 352, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prev-props component]))}, get-unbound-query {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 196, :column 7, :end-line 196, :end-column 24, :arglists (quote ([component])), :doc "Return the unbound query for a component."}, :name om.next/get-unbound-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 24, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return the unbound query for a component."}, update-component! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 609, :column 8, :end-line 609, :end-column 25, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-component!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 609, :end-line 609, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, path {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 412, :column 8, :end-line 412, :end-column 12, :private true, :arglists (quote ([c])), :doc "Returns the component's Om data path."}, :private true, :name om.next/path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 412, :end-line 412, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Returns the component's Om data path."}, to-class {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 973, :column 7, :end-line 973, :end-column 15, :arglists (quote ([class]))}, :name om.next/to-class, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 973, :end-line 973, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class]))}, tx-intercept {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 714, :column 4, :end-line 714, :end-column 16, :protocol om.next/ITxIntercept, :doc "An optional protocol that component may implement to intercept child\n     transactions.", :arglists (quote ([c tx]))}, :protocol om.next/ITxIntercept, :name om.next/tx-intercept, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([c tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 713, :end-line 714, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c tx])), :doc "An optional protocol that component may implement to intercept child\n     transactions."}, join-entry {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 99, :column 8, :end-line 99, :end-column 18, :private true, :arglists (quote ([node]))}, :private true, :name om.next/join-entry, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, children {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 604, :column 7, :end-line 604, :end-column 15, :arglists (quote ([component])), :doc "Returns the component's children."}, :name om.next/children, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 604, :end-line 604, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the component's children."}, default-merge-ref {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1349, :column 8, :end-line 1349, :end-column 25, :private true, :arglists (quote ([_ tree ref props]))}, :private true, :name om.next/default-merge-ref, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([_ tree ref props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1349, :end-line 1349, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_ tree ref props]))}, -set-state! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 171, :column 4, :end-line 171, :end-column 15, :protocol om.next/ILocalState, :doc "Set the component's local state", :arglists (quote ([this new-state]))}, :protocol om.next/ILocalState, :name om.next/-set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([this new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 171, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this new-state])), :doc "Set the component's local state"}, iquery? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 235, :column 7, :end-line 235, :end-column 14, :arglists (quote ([x]))}, :name om.next/iquery?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, var->keyword {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 180, :column 8, :end-line 180, :end-column 20, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var->keyword, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, update-props! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 434, :column 8, :end-line 434, :end-column 21, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-props!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 21, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 434, :end-line 434, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, nil-props {:name om.next/nil-props, :file "resources/public/js/om/next.cljs", :line 252, :column 1, :end-line 252, :end-column 25, :private true, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 252, :column 16, :end-line 252, :end-column 25, :private true}}, should-update? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 614, :column 7, :end-line 614, :end-column 21, :arglists (quote ([c next-props] [c next-props next-state])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}}, :name om.next/should-update?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}, :method-params ([c next-props] [c next-props next-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 614, :end-line 614, :max-fixed-arity 3, :fn-var true, :arglists ([c next-props] [c next-props next-state])}, get-ident {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 650, :column 7, :end-line 650, :end-column 16, :arglists (quote ([component])), :doc "Given a component return its ident"}, :name om.next/get-ident, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 650, :end-line 650, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Given a component return its ident"}, om-props {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 246, :column 8, :end-line 246, :end-column 16, :private true, :arglists (quote ([props basis-t]))}, :private true, :name om.next/om-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([props basis-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props basis-t]))}, instrument {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 430, :column 7, :end-line 430, :end-column 17, :arglists (quote ([component]))}, :name om.next/instrument, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 430, :end-line 430, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, om-props-basis {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 249, :column 8, :end-line 249, :end-column 22, :private true, :arglists (quote ([om-props]))}, :private true, :name om.next/om-props-basis, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([om-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 249, :end-line 249, :max-fixed-arity 1, :fn-var true, :arglists (quote ([om-props]))}, var? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 176, :column 8, :end-line 176, :end-column 12, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map->Reconciler {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1197, :column 12, :end-line 1197, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__18851]))}, :name om.next/map->Reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([G__18851]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 1197, :end-line 1197, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18851]))}, react-key {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 401, :column 7, :end-line 401, :end-column 16, :arglists (quote ([component])), :doc "Returns the components React key."}, :name om.next/react-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 401, :end-line 401, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the components React key."}, set-state! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 481, :column 7, :end-line 481, :end-column 17, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, :name om.next/set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 481, :end-line 481, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, default-migrate {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1359, :column 8, :end-line 1359, :end-column 23, :private true, :arglists (quote ([pure query tempids id-key]))}, :private true, :name om.next/default-migrate, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([pure query tempids id-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1359, :end-line 1359, :max-fixed-arity 4, :fn-var true, :arglists (quote ([pure query tempids id-key]))}, tree->db {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1049, :column 7, :end-line 1049, :end-column 15, :arglists (quote ([x data] [x data merge-refs])), :doc "Given a Om component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-ref\n   option is true, will return these tables in the result instead of as metadata.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x data] [x data merge-refs]), :arglists ([x data] [x data merge-refs]), :arglists-meta (nil nil)}}, :name om.next/tree->db, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x data] [x data merge-refs]), :arglists ([x data] [x data merge-refs]), :arglists-meta (nil nil)}, :method-params ([x data] [x data merge-refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1049, :end-line 1049, :max-fixed-arity 3, :fn-var true, :arglists ([x data] [x data merge-refs]), :doc "Given a Om component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-ref\n   option is true, will return these tables in the result instead of as metadata."}, from-history {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1465, :column 7, :end-line 1465, :end-column 19, :arglists (quote ([reconciler uuid])), :doc "Given a reconciler and UUID return the application state snapshost\n   from history associated with the UUID. The size of the reconciler history\n   may be configured by the :history option when constructing the reconciler."}, :name om.next/from-history, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([reconciler uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1465, :end-line 1465, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler uuid])), :doc "Given a reconciler and UUID return the application state snapshost\n   from history associated with the UUID. The size of the reconciler history\n   may be configured by the :history option when constructing the reconciler."}, default-ui->props {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1331, :column 8, :end-line 1331, :end-column 25, :private true, :arglists (quote ([{:keys [parser pathopt], :as env} c]))}, :private true, :name om.next/default-ui->props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([p__18905 c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1331, :end-line 1331, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [parser pathopt], :as env} c]))}, to-env {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 718, :column 8, :end-line 718, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name om.next/to-env, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 718, :end-line 718, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, process-roots {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1126, :column 7, :end-line 1126, :end-column 20, :arglists (quote ([query])), :doc "A send helper for rewriting the query to remove client local keys that\n   don't need server side processing. Give a query this function will\n   return a map with two keys, :query and :rewrite. :query is the\n   actual query you should send. Upon receiving the response you should invoke\n   :rewrite on the response before invoking the send callback."}, :name om.next/process-roots, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1126, :end-line 1126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query])), :doc "A send helper for rewriting the query to remove client local keys that\n   don't need server side processing. Give a query this function will\n   return a map with two keys, :query and :rewrite. :query is the\n   actual query you should send. Upon receiving the response you should invoke\n   :rewrite on the response before invoking the send callback."}, parent {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 390, :column 8, :end-line 390, :end-column 14, :private true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, :private true, :name om.next/parent, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 390, :end-line 390, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, merge-refs {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1152, :column 8, :end-line 1152, :end-column 18, :private true, :arglists (quote ([tree config refs]))}, :private true, :name om.next/merge-refs, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([tree config refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1152, :end-line 1152, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tree config refs]))}, prev-props* {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 345, :column 8, :end-line 345, :end-column 19, :private true, :arglists (quote ([x y] [x y z])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}}, :private true, :name om.next/prev-props*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z])}, replace {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 88, :column 8, :end-line 88, :end-column 15, :private true, :arglists (quote ([template new-query]))}, :private true, :name om.next/replace, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([template new-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([template new-query]))}, computed {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 454, :column 7, :end-line 454, :end-column 15, :arglists (quote ([props computed-map])), :doc "Add computed properties to props. Note will replace any pre-existing\n   computed properties."}, :name om.next/computed, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([props computed-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 454, :end-line 454, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props computed-map])), :doc "Add computed properties to props. Note will replace any pre-existing\n   computed properties."}, ->Indexer {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 812, :column 12, :end-line 812, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([indexes]))}, :name om.next/->Indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([indexes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 812, :end-line 812, :max-fixed-arity 1, :fn-var true, :arglists (quote ([indexes]))}, node->key {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 39, :column 8, :end-line 39, :end-column 17, :private true, :arglists (quote ([node]))}, :private true, :name om.next/node->key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, focused-join {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 111, :column 8, :end-line 111, :end-column 20, :private true, :arglists (quote ([node ks]))}, :private true, :name om.next/focused-join, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([node ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node ks]))}, union? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 66, :column 16, :end-line 66, :end-column 22, :tag boolean, :arglists (quote ([node]))}, :name om.next/union?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :ret-tag boolean, :end-line 66, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([node]))}, get-prev-props {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 320, :column 8, :end-line 320, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-prev-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 320, :end-line 320, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, normalize* {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 979, :column 8, :end-line 979, :end-column 18, :private true, :arglists (quote ([query data refs]))}, :private true, :name om.next/normalize*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([query data refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 979, :end-line 979, :max-fixed-arity 3, :fn-var true, :arglists (quote ([query data refs]))}, props* {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 339, :column 8, :end-line 339, :end-column 14, :private true, :arglists (quote ([x y] [x y z])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}}, :private true, :name om.next/props*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z])}, class->any {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 928, :column 7, :end-line 928, :end-column 17, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, :name om.next/class->any, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 928, :end-line 928, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, mounted? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 594, :column 16, :end-line 594, :end-column 24, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the component is mounted."}, :name om.next/mounted?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 594, :ret-tag boolean, :end-line 594, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the component is mounted."}, focus-query {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 117, :column 8, :end-line 117, :end-column 19, :private true, :arglists (quote ([query path]))}, :private true, :name om.next/focus-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path]))}, -merge-pending-state! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 174, :column 4, :end-line 174, :end-column 25, :protocol om.next/ILocalState, :doc "Get the component's pending local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-merge-pending-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's pending local state"}, default-merge-tree {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1353, :column 8, :end-line 1353, :end-column 26, :private true, :arglists (quote ([a b]))}, :private true, :name om.next/default-merge-tree, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 26, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1353, :end-line 1353, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, *reconciler* {:name om.next/*reconciler*, :file "resources/public/js/om/next.cljs", :line 27, :column 1, :end-line 27, :end-column 49, :dynamic true, :private true, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 27, :column 37, :end-line 27, :end-column 49, :dynamic true, :private true}}, merge-novelty! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1163, :column 8, :end-line 1163, :end-column 22, :private true, :arglists (quote ([reconciler state res]))}, :private true, :name om.next/merge-novelty!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([reconciler state res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1163, :end-line 1163, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reconciler state res]))}, IQuery {:meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 167, :column 14, :end-line 167, :end-column 20, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {query [[this]]}}}, :protocol-symbol true, :name om.next/IQuery, :file "resources/public/js/om/next.cljs", :end-column 20, :column 1, :line 167, :protocol-info {:methods {query [[this]]}}, :info nil, :end-line 167, :impls #{}, :doc nil, :jsdoc ("@interface")}, get-computed {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 465, :column 7, :end-line 465, :end-column 19, :arglists (quote ([x] [x k-or-ks])), :doc "Return the computed properties on a component or its props.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x k-or-ks]), :arglists ([x] [x k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-computed, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x k-or-ks]), :arglists ([x] [x k-or-ks]), :arglists-meta (nil nil)}, :method-params ([x] [x k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 465, :end-line 465, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x k-or-ks]), :doc "Return the computed properties on a component or its props."}, get-state {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 495, :column 7, :end-line 495, :end-column 16, :arglists (quote ([component] [component k-or-ks])), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 495, :end-line 495, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state."}, *parent* {:name om.next/*parent*, :file "resources/public/js/om/next.cljs", :line 28, :column 1, :end-line 28, :end-column 45, :dynamic true, :private true, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 28, :column 37, :end-line 28, :end-column 45, :dynamic true, :private true}}, update-state! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 509, :column 7, :end-line 509, :end-column 20, :arglists (quote ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest])), :doc "Update a component's local state. Similar to Clojure(Script)'s update-in.", :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}}, :name om.next/update-state!, :variadic true, :file "resources/public/js/om/next.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil nil), :column 1, :line 509, :end-line 509, :max-fixed-arity 6, :fn-var true, :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :doc "Update a component's local state. Similar to Clojure(Script)'s update-in."}, Indexer {:num-fields 1, :protocols #{cljs.core/IRecord om.next.protocols/IIndexer cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Indexer, :file "resources/public/js/om/next.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 812, :record true, :end-line 812, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, query-zip {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 47, :column 8, :end-line 47, :end-column 17, :private true, :arglists (quote ([root]))}, :private true, :name om.next/query-zip, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([root]))}, reconciler {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1375, :column 7, :end-line 1375, :end-column 17, :arglists (quote ([{:keys [state shared shared-fn parser indexer ui->props normalize send merge-sends remotes merge merge-tree merge-ref optimize history root-render root-unmount pathopt migrate id-key], :or {root-render (fn* [p1__18955# p2__18956#] (js/ReactDOM.render p1__18955# p2__18956#)), pathopt false, merge-sends (fn* [p1__18953# p2__18954#] (merge-with into p1__18953# p2__18954#)), remotes [:remote], migrate default-migrate, history 100, merge-ref default-merge-ref, merge default-merge, ui->props default-ui->props, indexer om.next/indexer, root-unmount (fn* [p1__18957#] (js/ReactDOM.unmountComponentAtNode p1__18957#)), merge-tree default-merge-tree, optimize (fn [cs] (sort-by depth cs))}, :as config}])), :doc "Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :logger       - supply a goog.log compatible logger"}, :name om.next/reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([p__18958]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1375, :end-line 1375, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [state shared shared-fn parser indexer ui->props normalize send merge-sends remotes merge merge-tree merge-ref optimize history root-render root-unmount pathopt migrate id-key], :or {root-render (fn* [p1__18955# p2__18956#] (js/ReactDOM.render p1__18955# p2__18956#)), pathopt false, merge-sends (fn* [p1__18953# p2__18954#] (merge-with into p1__18953# p2__18954#)), remotes [:remote], migrate default-migrate, history 100, merge-ref default-merge-ref, merge default-merge, ui->props default-ui->props, indexer om.next/indexer, root-unmount (fn* [p1__18957#] (js/ReactDOM.unmountComponentAtNode p1__18957#)), merge-tree default-merge-tree, optimize (fn [cs] (sort-by depth cs))}, :as config}])), :doc "Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :logger       - supply a goog.log compatible logger"}, *instrument* {:name om.next/*instrument*, :file "resources/public/js/om/next.cljs", :line 30, :column 1, :end-line 30, :end-column 49, :dynamic true, :private true, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 30, :column 37, :end-line 30, :end-column 49, :dynamic true, :private true}}, params {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 161, :column 4, :end-line 161, :end-column 10, :protocol om.next/IQueryParams, :doc "Return the query parameters", :arglists (quote ([this]))}, :protocol om.next/IQueryParams, :name om.next/params, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the query parameters"}, *shared* {:name om.next/*shared*, :file "resources/public/js/om/next.cljs", :line 29, :column 1, :end-line 29, :end-column 45, :dynamic true, :private true, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 29, :column 37, :end-line 29, :end-column 45, :dynamic true, :private true}}, get-indexer {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 910, :column 7, :end-line 910, :end-column 18, :arglists (quote ([reconciler])), :doc "PRIVATE: Get the indexer associated with the reconciler."}, :name om.next/get-indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 910, :end-line 910, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "PRIVATE: Get the indexer associated with the reconciler."}, get-props* {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 311, :column 8, :end-line 311, :end-column 18, :private true, :arglists (quote ([x k]))}, :private true, :name om.next/get-props*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([x k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 311, :end-line 311, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x k]))}, focus->path {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 131, :column 8, :end-line 131, :end-column 19, :private true, :arglists (quote ([focus] [focus bound] [focus bound path])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([focus] [focus bound] [focus bound path]), :arglists ([focus] [focus bound] [focus bound path]), :arglists-meta (nil nil nil)}}, :private true, :name om.next/focus->path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([focus] [focus bound] [focus bound path]), :arglists ([focus] [focus bound] [focus bound path]), :arglists-meta (nil nil nil)}, :method-params ([focus] [focus bound] [focus bound path]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 3, :fn-var true, :arglists ([focus] [focus bound] [focus bound path])}, get-params {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 201, :column 7, :end-line 201, :end-column 17, :arglists (quote ([component])), :doc "Return the query params for a component."}, :name om.next/get-params, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return the query params for a component."}, bind-query {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 183, :column 8, :end-line 183, :end-column 18, :private true, :arglists (quote ([query params]))}, :private true, :name om.next/bind-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([query params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query params]))}, compute-react-key {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 257, :column 8, :end-line 257, :end-column 25, :private true, :arglists (quote ([cl props]))}, :private true, :name om.next/compute-react-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([cl props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cl props]))}, set-prop! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 329, :column 8, :end-line 329, :end-column 17, :private true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/set-prop!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([c k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 329, :end-line 329, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, *raf* {:name om.next/*raf*, :file "resources/public/js/om/next.cljs", :line 26, :column 1, :end-line 26, :end-column 28, :dynamic true, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 26, :column 23, :end-line 26, :end-column 28, :dynamic true}}, IQueryParams {:meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 160, :column 14, :end-line 160, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {params [[this]]}}}, :protocol-symbol true, :name om.next/IQueryParams, :file "resources/public/js/om/next.cljs", :end-column 26, :column 1, :line 160, :protocol-info {:methods {params [[this]]}}, :info nil, :end-line 160, :impls #{default}, :doc nil, :jsdoc ("@interface")}, join-key {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 93, :column 8, :end-line 93, :end-column 16, :private true, :arglists (quote ([node]))}, :private true, :name om.next/join-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, ident? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 155, :column 16, :end-line 155, :end-column 22, :tag boolean, :arglists (quote ([x])), :doc "Returns true if x satisfies? Ident"}, :name om.next/ident?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :ret-tag boolean, :end-line 155, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if x satisfies? Ident"}, state {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 302, :column 8, :end-line 302, :end-column 13, :private true, :arglists (quote ([c]))}, :private true, :name om.next/state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 302, :end-line 302, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, schedule-render! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 664, :column 7, :end-line 664, :end-column 23, :arglists (quote ([reconciler]))}, :name om.next/schedule-render!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 664, :end-line 664, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, react-set-state! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 544, :column 7, :end-line 544, :end-column 23, :arglists (quote ([component new-state] [component new-state cb])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}}, :name om.next/react-set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}, :method-params ([component new-state] [component new-state cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 544, :end-line 544, :max-fixed-arity 3, :fn-var true, :arglists ([component new-state] [component new-state cb])}, class-path {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 623, :column 8, :end-line 623, :end-column 18, :private true, :arglists (quote ([c]))}, :private true, :name om.next/class-path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 623, :end-line 623, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, transact! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 764, :column 7, :end-line 764, :end-column 16, :arglists (quote ([x tx] [r ref tx])), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering. If given a reconciler can be\n   optionally passed a ref as the second argument.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}}, :name om.next/transact!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}, :method-params ([x tx] [r ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 764, :end-line 764, :max-fixed-arity 3, :fn-var true, :arglists ([x tx] [r ref tx]), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering. If given a reconciler can be\n   optionally passed a ref as the second argument.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])"}, schedule-sends! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 676, :column 7, :end-line 676, :end-column 22, :arglists (quote ([reconciler]))}, :name om.next/schedule-sends!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 676, :end-line 676, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, basis-t {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 661, :column 8, :end-line 661, :end-column 15, :private true, :arglists (quote ([reconciler]))}, :private true, :name om.next/basis-t, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 661, :end-line 661, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, roots {:name om.next/roots, :file "resources/public/js/om/next.cljs", :line 25, :column 1, :end-line 25, :end-column 21, :private true, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 25, :column 16, :end-line 25, :end-column 21, :private true}}, *depth* {:name om.next/*depth*, :file "resources/public/js/om/next.cljs", :line 31, :column 1, :end-line 31, :end-column 44, :dynamic true, :private true, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 31, :column 37, :end-line 31, :end-column 44, :dynamic true, :private true}}, add-root! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 682, :column 7, :end-line 682, :end-column 16, :arglists (quote ([reconciler root-class target] [reconciler root-class target options])), :doc "Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}}, :name om.next/add-root!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}, :method-params ([reconciler root-class target] [reconciler root-class target options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 682, :end-line 682, :max-fixed-arity 4, :fn-var true, :arglists ([reconciler root-class target] [reconciler root-class target options]), :doc "Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one."}, reconciler? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1454, :column 16, :end-line 1454, :end-column 27, :tag boolean, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, :name om.next/reconciler?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1454, :ret-tag boolean, :end-line 1454, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, get-query {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 215, :column 7, :end-line 215, :end-column 16, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, :name om.next/get-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, ref->components {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 916, :column 7, :end-line 916, :end-column 22, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, :name om.next/ref->components, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 916, :end-line 916, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, mock-root {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 703, :column 7, :end-line 703, :end-column 16, :arglists (quote ([reconciler root-class])), :doc "Create an Om Next root without an actual DOM target. Useful in devcards\n   testing context."}, :name om.next/mock-root, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([reconciler root-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 703, :end-line 703, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler root-class])), :doc "Create an Om Next root without an actual DOM target. Useful in devcards\n   testing context."}, ->Reconciler {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1197, :column 12, :end-line 1197, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([config state]))}, :name om.next/->Reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([config state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 1197, :end-line 1197, :max-fixed-arity 2, :fn-var true, :arglists (quote ([config state]))}, Reconciler {:num-fields 2, :protocols #{cljs.core/IRecord om.next.protocols/IReconciler cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Reconciler, :file "resources/public/js/om/next.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 1197, :record true, :end-line 1197, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, OmProps {:private true, :num-fields 2, :protocols #{}, :name om.next/OmProps, :file "resources/public/js/om/next.cljs", :end-column 27, :type true, :column 20, :line 244, :record false, :end-line 244, :skip-protocol-flag nil}, transact* {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 722, :column 7, :end-line 722, :end-column 16, :arglists (quote ([r c ref tx]))}, :name om.next/transact*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([r c ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 722, :end-line 722, :max-fixed-arity 4, :fn-var true, :arglists (quote ([r c ref tx]))}, dispatch {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 804, :column 7, :end-line 804, :end-column 15, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, :name om.next/dispatch, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([_ key _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 804, :end-line 804, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, app-state {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1459, :column 7, :end-line 1459, :end-column 16, :arglists (quote ([reconciler])), :doc "Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."}, :name om.next/app-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1459, :end-line 1459, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."}, -get-state {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 172, :column 4, :end-line 172, :end-column 14, :protocol om.next/ILocalState, :doc "Get the component's local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's local state"}, join? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 107, :column 8, :end-line 107, :end-column 13, :private true, :arglists (quote ([x]))}, :private true, :name om.next/join?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, factory {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 264, :column 7, :end-line 264, :end-column 14, :arglists (quote ([class] [class {:keys [validator keyfn], :as opts}])), :doc "Create a factory constructor from a component class created with\n   om.next/defui.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :arglists-meta (nil nil)}}, :name om.next/factory, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :arglists-meta (nil nil)}, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 2, :fn-var true, :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :doc "Create a factory constructor from a component class created with\n   om.next/defui."}, -get-rendered-state {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 173, :column 4, :end-line 173, :end-column 23, :protocol om.next/ILocalState, :doc "Get the component's rendered local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-rendered-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's rendered local state"}, parser {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 797, :column 7, :end-line 797, :end-column 13, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, :name om.next/parser, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([p__18617]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 797, :end-line 797, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, merge-pending-state! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 534, :column 8, :end-line 534, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 534, :end-line 534, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, merge-pending-props! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 367, :column 8, :end-line 367, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-props!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 367, :end-line 367, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, nil-or-map? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 36, :column 16, :end-line 36, :end-column 27, :tag boolean, :arglists (quote ([x]))}, :name om.next/nil-or-map?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :ret-tag boolean, :end-line 36, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, writer {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1483, :column 7, :end-line 1483, :end-column 13, :arglists (quote ([] [opts])), :doc "Create a Om Next transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}}, :name om.next/writer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1483, :end-line 1483, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :doc "Create a Om Next transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map."}, *logger* {:name om.next/*logger*, :file "resources/public/js/om/next.cljs", :line 17, :column 1, :end-line 17, :end-column 18, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 17, :column 10, :end-line 17, :end-column 18}}, sift-refs {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1067, :column 8, :end-line 1067, :end-column 17, :private true, :arglists (quote ([res]))}, :private true, :name om.next/sift-refs, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1067, :end-line 1067, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res]))}, indexer {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 902, :column 7, :end-line 902, :end-column 14, :arglists (quote ([])), :doc "Given a function (Component -> Ref), return an indexer."}, :name om.next/indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 902, :end-line 902, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Given a function (Component -> Ref), return an indexer."}, subquery {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 638, :column 7, :end-line 638, :end-column 15, :arglists (quote ([x subquery-ref subquery-class])), :doc "Given a class or mounted component x and a ref to an instantiated component\n   or class that defines a subquery, pick the most specific subquery. If the\n   component is mounted subquery-ref will be used, subquery-class otherwise."}, :name om.next/subquery, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([x subquery-ref subquery-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 638, :end-line 638, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x subquery-ref subquery-class])), :doc "Given a class or mounted component x and a ref to an instantiated component\n   or class that defines a subquery, pick the most specific subquery. If the\n   component is mounted subquery-ref will be used, subquery-class otherwise."}, reader {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1477, :column 7, :end-line 1477, :end-column 13, :arglists (quote ([] [opts])), :doc "Create a Om Next transit reader. This reader can handler the tempid type.\n   Can pass transit reader customization opts map.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}}, :name om.next/reader, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1477, :end-line 1477, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :doc "Create a Om Next transit reader. This reader can handler the tempid type.\n   Can pass transit reader customization opts map."}, component? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 295, :column 16, :end-line 295, :end-column 26, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, :name om.next/component?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 26, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 295, :ret-tag boolean, :end-line 295, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, remove-root! {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 697, :column 7, :end-line 697, :end-column 19, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."}, :name om.next/remove-root!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([reconciler target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 697, :end-line 697, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."}, ident {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 153, :column 4, :end-line 153, :end-column 9, :protocol om.next/Ident, :doc "Return the ref for this component", :arglists (quote ([this props]))}, :protocol om.next/Ident, :name om.next/ident, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([this props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this props])), :doc "Return the ref for this component"}, react-ref {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 599, :column 7, :end-line 599, :end-column 16, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, :name om.next/react-ref, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([component name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 599, :end-line 599, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, tempid {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1472, :column 7, :end-line 1472, :end-column 13, :arglists (quote ([] [id])), :doc "Return a temporary id.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}}, :name om.next/tempid, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}, :method-params ([] [id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1472, :end-line 1472, :max-fixed-arity 1, :fn-var true, :arglists ([] [id]), :doc "Return a temporary id."}, get-reconciler {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 334, :column 8, :end-line 334, :end-column 22, :private true, :arglists (quote ([c]))}, :private true, :name om.next/get-reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 334, :end-line 334, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, map->Indexer {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 812, :column 12, :end-line 812, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__18627]))}, :name om.next/map->Indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([G__18627]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 812, :end-line 812, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18627]))}, transform-reads {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 749, :column 7, :end-line 749, :end-column 22, :arglists (quote ([r tx]))}, :name om.next/transform-reads, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([r tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 749, :end-line 749, :max-fixed-arity 2, :fn-var true, :arglists (quote ([r tx]))}, shared {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 417, :column 7, :end-line 417, :end-column 13, :arglists (quote ([component] [component k-or-ks])), :doc "Return the global shared properties of the Om Next root. See :shared and\n   :shared-fn reconciler options.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/shared, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 417, :end-line 417, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Return the global shared properties of the Om Next root. See :shared and\n   :shared-fn reconciler options."}, depth {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 395, :column 8, :end-line 395, :end-column 13, :private true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, :private true, :name om.next/depth, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 395, :end-line 395, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, ref? {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 1073, :column 16, :end-line 1073, :end-column 20, :tag boolean, :arglists (quote ([x]))}, :name om.next/ref?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1073, :ret-tag boolean, :end-line 1073, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, ILocalState {:meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 170, :column 14, :end-line 170, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}}, :protocol-symbol true, :name om.next/ILocalState, :file "resources/public/js/om/next.cljs", :end-column 25, :column 1, :line 170, :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}, :info nil, :end-line 170, :impls #{}, :doc nil, :jsdoc ("@interface")}, full-query {:protocol-inline nil, :meta {:file "/home/io/learnings/om_tut/resources/public/js/om/next.cljs", :line 941, :column 7, :end-line 941, :end-column 17, :arglists (quote ([component] [component query])), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component query]), :arglists ([component] [component query]), :arglists-meta (nil nil)}}, :name om.next/full-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component query]), :arglists ([component] [component query]), :arglists-meta (nil nil)}, :method-params ([component] [component query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 941, :end-line 941, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component query]), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query."}}, :require-macros {om.next om.next}, :cljs.analyzer/constants {:seen #{:om.next/union indexes x :remote :tempids :normalized query satisfies? fn? :remove :pathopt vector? :id-key :react-key subquery-ref :read :om.next/queries :else props :merge-sends :ref :config :queue :validator :sends-queued :remotes subquery-class :migrate * map? :reconciler c' :params :history :paths string? :type :keyfn :merge-ref :state :queued-sends :prop->classes keyword? validator :component config :ref->components :om.next/tables :merge :om.next/no-queries :queued refs :class->components IQuery or :shared-fn reconciler params :render :parser :keys :ui->props nil? :next not :root state component :logger :indexer :root-unmount basis-t reconciler? :om-path :send :om.next/not-found :shared :merge-tree :optimize c :t tx :om.next/computed :indexes :target :root-render :query class :query/root ... :rewrite opts :class-path->query :normalize component? root-class :mutate :om.next/skip}, :order [:else :om.next/union * ... :config :state :om.next/queries :query :params :component nil? c' c props basis-t :react-key :om-path :validator :keyfn fn? class validator :ref component? component :om.next/computed :parser or not params query :history :logger :remotes keyword? subquery-ref string? subquery-class reconciler? reconciler root-class :shared :pathopt :reconciler vector? tx satisfies? IQuery x :read :mutate map? opts :prop->classes :class-path->query :class->components :ref->components :om.next/not-found :indexes indexes :indexer :type :om.next/no-queries :om.next/tables refs :query/root :paths :rewrite :merge-ref :normalize :merge-tree :root :keys :next :tempids :merge :migrate :id-key :queue :queued-sends :merge-sends :sends-queued :send :render :om.next/skip :ui->props :optimize :queued :t :normalized :shared-fn :root-render :target :remove :root-unmount config state :remote]}, :doc nil}